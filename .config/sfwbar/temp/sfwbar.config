Function("SfwbarInit") {
  SetLayer "top"
  SetBarSize "status_bar", "100%"

  SetLayer "bottom"
  SetBarSize "task_bar", "100%"

}

# Task Switcher, trigger when press Alt+Tab
switcher {
  interval = 700
  icons = true
  labels = false
  cols = 5
}

# action when right-click on task on bar
include("winops.widget")

# map icon for app when missing. for more info : https://github.com/LBCrion/sfwbar/blob/main/doc/sfwbar.rst#user-content-miscellaneous
# recommended add to ~/.icons, this can not find inside folder so must put a top in icons
MapAppId ".*Docker Desktop$", "docker-desktop"

# contain status and launcher
layout "status_bar" {
    style = frame

    # menu widgets


    # launchers
    include("launchers.widget")


    # put all item after this to right
    label {
        css = "* { -GtkWidget-hexpand: true; }"
    }

    tray {
        rows = 1
    }
    include("sound/sound.widget")

#    label {
#            style = "cpu"
#            css = "* {
#                min-width: 24px;
#                padding: 0px 0px 0px 4px;
#            }"
#            value = ""
#        }

        label {
            style = "cpu"
            css = "* {
                min-width: 23px;
                padding: 0px 4px 0px 0px;
            }"
            interval = 1000
            value = $CpuUtilization
        }

        grid {
        label {
                    style = "cpu"
                    css = "* {
                        min-width: 23px;
                        padding: 0px 4px 0px 0px;
                    }"
                    interval = 1000
                    value = $CpuUtilization
                }

        }

    label {
        css = "* { -GtkWidget-hexpand: true; }"
    }

    include("cpu/cpu.widget")
    include("memories/ram.widget")
    include("cpu/cpu-temp.widget")

#    label {
#        css = "* {
#            font: 20pt Mono;
#            background-color: #64727D;
#            -GtkWidget-align: 0.5;
#            -GtkWidget-vexpand: true;
#            color: #ffffff;
#        }"
##        value = ""
#        value = "󰿟"
#    }

    # Todo display backlight
    include("battery/battery.widget") # battery

    ## clock
    grid {
        label {
                    css = "* {
                        font: 10pt Mono;
                        background-color: #64727D;
                        -GtkWidget-align: 0.5;
                        -GtkWidget-hexpand: true;
                        -GtkWidget-vexpand: true;
                        min-width: 80px;
                        padding: 0 4px;
                        color: #ffffff;
                    }"

                    interval = 1000
                    value = Time("%k:%M %Z %x")
                }

        label {
            css = "* {
                font: 10pt Mono;
                background-color: #64727D;
                -GtkWidget-align: 0.5;
                -GtkWidget-hexpand: true;
                -GtkWidget-vexpand: true;
                min-width: 80px;
                padding: 0 4px;
                color: #ffffff;
            }"

            interval = 1000
            value = Time("%k:%M %Z %x")
        }

        ## if put out this grid i can not control width of this label

        label {
            style = "menu"
            css = "* {
                min-width: 60px;
                padding: 0 4px;
            }"
            value = "menu"
            action[LeftClick] = "rofi -show"
        }
    }
}

# contain taskbar
layout "task_bar" {

    taskbar {
        rows = 1
        css = "* { -GtkWidget-hexpand: true; }" # stretch horizontally
        group = false
        icons = true
        labels = true
        # on right-click open winops
        action[3] = Menu "winops"
    }
}

#CSS
#hidden {
  -GtkWidget-visible: false;
}

#menu,
#volume,
#cputemp,
#battery,
#ram,
#cpu {
font: 10pt Mono;
                background-color: #64727D;
                -GtkWidget-align: 0.5;
                -GtkWidget-hexpand: true;
                -GtkWidget-vexpand: true;
                min-width: 80px;
                padding: 0 4px;
                color: #ffffff;
}


#battery_charging, #battery_plugged {
  color: #ffffff;
  background-color: #26A65B;
}

#battery.critical:not(.charging) {
  background-color: #f53c3c;
  color: #ffffff;
  animation-name: blink;
  animation-duration: 0.5s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-direction: alternate;
}

@define-color theme_text_color white;
@define-color theme_bg_color black;
@define-color theme_fg_color white;
@define-color borders rgba(256,256,256,0.3);


menu {
  background-color: black;
  border: 1px solid @borders;
  padding: 3px;
}

menuitem {
  color: @theme_text_color;
  padding: 2px;
}

window#status_bar {
    -GtkWidget-direction: top;
    background-color: rgba(0,0,0,0.6);
}

window#task_bar {
    -GtkWidget-direction: bottom;
    background-color: rgba(0,0,0,0.6);
}



